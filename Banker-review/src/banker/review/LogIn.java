package banker.review;

import java.io.*;
import java.sql.*;
import javax.swing.JOptionPane;
import java.lang.Character;
import org.apache.commons.codec.digest.DigestUtils;
import ConnectionPool.NewClass;

import ServerMessages.Messages;

/**
 *
 * @author victor
 */
public class LogIn extends javax.swing.JFrame {

    /**
     * @return the employeeID
     */
    public static String getEmployeeID() {
        return employeeID;
    }

    /**
     * @param aEmployeeID the employeeID to set
     */
    public static void setEmployeeID(String EmployeeID) {
        employeeID = EmployeeID;
    }

    /**
     * @return the employeeEgn
     */
    public static String getEmployeeEgn() {
        return employeeEgn;
    }

    /**
     * @param aEmployeeEgn the employeeEgn to set
     */
    public static void setEmployeeEgn(String EmployeeEgn) {
        employeeEgn = EmployeeEgn;
    }

    private ResultSet rs;
    private static String employeeID;
    private static String employeeEgn;

    public LogIn() {
        initComponents();
        NewClass.Vrazka.connectMethod();
        Messages.Svurzvane.doConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pin = new javax.swing.JLabel();
        pass = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        LogIn = new javax.swing.JButton();
        pinField = new javax.swing.JPasswordField();
        passField = new javax.swing.JPasswordField();
        userField = new javax.swing.JTextField();

        jDialog1.setLocation(new java.awt.Point(430, 300));
        jDialog1.setSize(new java.awt.Dimension(450, 150));

        jLabel4.setText("Wrong username, password or PIN. Try again !!!");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(86, 86, 86))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Вход");
        setLocation(new java.awt.Point(500, 300));
        setResizable(false);

        pin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pin.setText("ПИН: ");

        pass.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pass.setText("Парола: ");

        user.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        user.setText("Потребителско име: ");

        LogIn.setText("Вход");
        LogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogInActionPerformed(evt);
            }
        });

        pinField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pinFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(user)
                                .addGap(10, 10, 10)
                                .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(pass)
                                .addGap(10, 10, 10)
                                .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LogIn)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pin)
                                .addGap(10, 10, 10)
                                .addComponent(pinField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass)
                    .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pin))
                .addGap(12, 12, 12)
                .addComponent(LogIn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pinFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pinFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pinFieldActionPerformed

    private void LogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogInActionPerformed
        try {
            String user = userField.getText().trim();
            this.setEmployeeID(userField.getText().trim());
            String pass = DigestUtils.sha512Hex(passField.getText());
            String pin = DigestUtils.sha512Hex(pinField.getText());

            // zashtita ot SQL injection
            if (user.contains("'") && user.contains(";")) {
                JOptionPane.showMessageDialog(null, "SQL injection decline! ");
                this.setVisible(false);
                new LogIn().setVisible(true);
            } else {
                // proverka za glavni bukvi 
                boolean upperFound = false;
                for (char c : user.toCharArray()) {
                    if (Character.isUpperCase(c)) {
                        upperFound = true;
                    }
                }
                if (upperFound == true) {
                    JOptionPane.showMessageDialog(null, "Username has content only small letter! ");
                    this.setVisible(false);
                    new LogIn().setVisible(true);
                } else {
                    String employeeInfo = "SELECT employee_list_id FROM employee_username WHERE username_id='" + this.getEmployeeID() + "' ";
                    // vzemane na egn na lognatiq banker
                    rs = NewClass.Vrazka.st.executeQuery(employeeInfo);
                    rs.next();
                    employeeEgn = rs.getString("employee_list_id");
                    rs.close();

                    String sql = "SELECT * FROM employee_username WHERE username_id = '" + user + "'and "
                            + "password = '" + pass + "'and pin = '" + pin + "'";
                    // vzemane na danni za account
                    rs = NewClass.Vrazka.st.executeQuery(sql);

                    // proverka 
                    int count = 0;
                    while (rs.next()) {
                        count = count + 1;
                    }

                    if (count == 1) {
                        LoadCustomer loadCustomer = new LoadCustomer();
                        loadCustomer.setVisible(true);
                        
                        try {
                            PrintWriter out = new PrintWriter(new OutputStreamWriter(Messages.Svurzvane.connection.getOutputStream()));
                            out.println("employee: " +employeeID + " has logged in.");
                            out.flush();
                        } catch (Exception ex) {
                            System.out.println(ex.getMessage());
                        }
                        dispose();
                    } else if (count > 1) {
                        JOptionPane.showMessageDialog(null, "Duplicate User! Access denied! ");
                    } else {
                        JOptionPane.showMessageDialog(null, "Wrong username, password or PIN! ");
                        this.setVisible(false);
                        new LogIn().setVisible(true);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Connection to database server lost !");
            System.exit(0);
        }
    }//GEN-LAST:event_LogInActionPerformed

    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogIn;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel pass;
    private javax.swing.JPasswordField passField;
    private javax.swing.JLabel pin;
    private javax.swing.JPasswordField pinField;
    private javax.swing.JLabel user;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables
}
