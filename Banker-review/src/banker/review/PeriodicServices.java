/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banker.review;

import ConnectionPool.NewClass;
import ServerMessages.Messages;
import java.awt.print.PrinterException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author victor
 */
public class PeriodicServices extends javax.swing.JFrame {

    public static String getFalseDate() {
        return falseDate;
    }

    public static void setFalseDate(String aFalseDate) {
        falseDate = aFalseDate;
    }

    private ResultSet rs;
    private static String falseDate;
    
    /**
     * Creates new form PeriodicServices
     */
    public PeriodicServices() throws ClassNotFoundException {
            initComponents();
            Update_Table();    
    }
    
    private void Update_Table(){
        try{
            String sql = "SELECT orderer_account_type_current_id as 'поръчител', basis as 'основание',"
                    + " amount as 'сума', exchange_rate_id as 'валута', recipient_account_type_current_id as 'получател',"
                    + " periodicity as 'периодичност', next_execution_date as 'следваща дата', "
                    + "register_date as 'дата на създаване' FROM periodic_payment WHERE orderer_customer_list_id='"+LoadCustomer.getEgn()+"' ";
            // vzemane na danni ot bazata danni 
            NewClass.Vrazka.pst = NewClass.Vrazka.con.prepareStatement(sql);
            rs=NewClass.Vrazka.pst.executeQuery();
            // postavqne na dannite v tablicata
            periodicTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception ex){}  
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addPeriodicBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        periodicCombo = new javax.swing.JComboBox();
        OrderIbanField = new javax.swing.JTextField();
        order = new javax.swing.JLabel();
        basis = new javax.swing.JLabel();
        currencyCombo = new javax.swing.JComboBox();
        amount = new javax.swing.JLabel();
        orderField = new javax.swing.JTextField();
        amountField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        basisArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        currency = new javax.swing.JLabel();
        next = new javax.swing.JLabel();
        nextDateDay = new javax.swing.JComboBox();
        nextDateMonth = new javax.swing.JComboBox();
        nextDateYear = new javax.swing.JComboBox();
        recipienIbanField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        periodicTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setTitle("Периодични плащания");
        setLocation(new java.awt.Point(270, 130));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                enableMenu(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Добавяне на нова метка за плащане: "));

        jLabel2.setText("Периодичност: ");

        addPeriodicBtn.setText("Добави");
        addPeriodicBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPeriodicBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Отказ");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        periodicCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "daily", "weekly", "monthly", "yearly" }));

        order.setText("Поръчител: ");

        basis.setText("Основание: ");

        currencyCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BGN", "USA", "AUS", "EUR", "CAD", "GBP", "UAH", "SEK", "SNY", "CRC", "CUP", "XCD", "EGP", "FDJ", "HTG", "HDK", "VND", "TRY", "JPY", "KPW" }));

        amount.setText("Сума: ");

        basisArea.setColumns(20);
        basisArea.setRows(5);
        jScrollPane2.setViewportView(basisArea);

        jLabel1.setText("ОТ:");

        currency.setText("Валута:");

        next.setText("Следваща дата:");

        nextDateDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        nextDateMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        nextDateYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015" }));

        jLabel7.setText("ДО: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addPeriodicBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 117, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(recipienIbanField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(OrderIbanField, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(order)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(orderField, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(basis)
                                    .addComponent(next)
                                    .addComponent(amount))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(periodicCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(nextDateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nextDateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nextDateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(currency)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(currencyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(7, 7, 7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(153, 153, 153)))))
                .addGap(132, 132, 132))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OrderIbanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(order)
                    .addComponent(orderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(basis))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(periodicCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next)
                    .addComponent(nextDateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextDateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextDateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amount)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currency)
                    .addComponent(currencyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recipienIbanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitBtn)
                    .addComponent(addPeriodicBtn))
                .addGap(22, 22, 22))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Налични периодични сметки: "));

        periodicTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(periodicTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Файл");

        jMenuItem1.setText("Принтирай");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addPeriodicBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPeriodicBtnActionPerformed
        try{
            String orderCode, recipientCode, isBlocked;
            double orderRate, recipientRate, orderReverseRate, recipientReverseRate, orderBalance = 0.0,
                    recipientBalance = 0.0;
            boolean checkSum = false;
            
            String orderIban = OrderIbanField.getText().trim();
            String order = orderField.getText().trim();
            String basis = basisArea.getText().trim();
            String periodicity = (String)periodicCombo.getSelectedItem();
            
            // izchislqvane na data za sledvashto plashtane
            int testDate = nextDateDay.getSelectedIndex();                       
            int d = testDate+1;
            String stringDate = ""+ nextDateYear.getSelectedItem()+nextDateMonth
                    .getSelectedItem()+d;                                        
            String stringDateCheck = ""+d+nextDateMonth.getSelectedItem();       
            DateFormat dateFormat = new SimpleDateFormat("ddMM");
            Date date = new Date();                                              
            boolean forDate = true;
            if(stringDateCheck.equals(dateFormat.format(date)) ){
                int testDate2 = d+1;                                            
                this.setFalseDate(""+ nextDateYear.getSelectedItem()+nextDateMonth
                    .getSelectedItem()+testDate2);
                forDate = false;
            }
            String currency = (String)currencyCombo.getSelectedItem();
            String sum = amountField.getText().trim();
            String recIban = recipienIbanField.getText().trim();
            
            String orderer = "SELECT balance, exchange_rate_id, is_blocked FROM account_type_current WHERE "
                    + "iban_id='"+orderIban+"' and customer_list_id='"+order+"' ";
            
            // vzimane na danni za order
            rs = NewClass.Vrazka.st.executeQuery(orderer);
            rs.next();
            orderCode = rs.getString("exchange_rate_id");
            orderBalance = Double.parseDouble(rs.getString("balance"));
            isBlocked = rs.getString("is_blocked"); 
            rs.close();
            
            double test = Double.parseDouble(amountField.getText());
            sum = amountField.getText();
            
            if (orderBalance >= test) {
                checkSum = true;
            }
                if (checkSum == true) {
                    String ordererDel = "UPDATE account_type_current SET balance=balance-'" + sum + "' WHERE "
                            + "iban_id='"+orderIban+"' and customer_list_id='"+order+"' ";
                    NewClass.Vrazka.st.executeUpdate(ordererDel);

                    String transaction = "UPDATE account_type_current SET balance=balance+'" + sum + "' WHERE "
                            + "iban_id='"+recIban+"' ";
                    NewClass.Vrazka.st.executeUpdate(transaction);
                    if(forDate == false){
                        String insertPeriodic = "INSERT INTO periodic_payment VALUES ('"+orderIban+"', '"+order+"', "
                            + "'"+basis+"', '"+sum+"', '"+orderCode+"','"+recIban+"', '"+periodicity+"',"
                            + "'"+PeriodicServices.getFalseDate()+"', SYSDATETIME())";
                            NewClass.Vrazka.st.executeUpdate(insertPeriodic);
                    JOptionPane.showMessageDialog(null, " Periodic services added. ");
                    } else {
                        String insertPeriodic = "INSERT INTO periodic_payment VALUES ('"+orderIban+"', '"+order+"', "
                            + "'"+basis+"', '"+sum+"', '"+orderCode+"','"+recIban+"', '"+periodicity+"',"
                            + "'"+stringDate+"', SYSDATETIME())";
                            NewClass.Vrazka.st.executeUpdate(insertPeriodic);
                    JOptionPane.showMessageDialog(null, " Periodic services added. ");
                    }
                    String history = "INSERT INTO employee_history (employee_username_id, action_description, "
                            + "action_time) VALUES ('" + LogIn.getEmployeeID() + "', "
                        + "'has made periodic payment between " + orderIban + " and " + recIban + " ', SYSDATETIME()) ";
                NewClass.Vrazka.st.execute(history);

                try {
                    PrintWriter out = new PrintWriter(new OutputStreamWriter(Messages.Svurzvane.connection.getOutputStream()));
                    out.println("employee: "+LogIn.getEmployeeID() + " has made periodic payment between " + orderIban + " and " + recIban +  ".");
                    out.flush();
                } catch (Exception ex) {
                }
                // update na table 
                Update_Table();
            } else {
                JOptionPane.showMessageDialog(null, " Balance not enought! ");
            }
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
                    ex.printStackTrace();
        }  
    }//GEN-LAST:event_addPeriodicBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        PeriodicServices.this.dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            //print
            periodicTable.print();
        } catch (PrinterException ex) {}
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void enableMenu(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_enableMenu
        // aktivirane na butoni i menuta v glavniq panel sled zatvarqneto na tozi 
        Review_profile.jMenuBar1.setEnabled(true);
        Review_profile.closeAcc.setEnabled(true);
        Review_profile.Block.setEnabled(true);
        Review_profile.jButton2.setEnabled(true);
        Review_profile.jMenu2.setEnabled(true);
        Review_profile.jMenu1.setEnabled(true);
    }//GEN-LAST:event_enableMenu

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField OrderIbanField;
    private javax.swing.JButton addPeriodicBtn;
    private javax.swing.JLabel amount;
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel basis;
    private javax.swing.JTextArea basisArea;
    private javax.swing.JLabel currency;
    private javax.swing.JComboBox currencyCombo;
    private javax.swing.JButton exitBtn;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel next;
    private javax.swing.JComboBox nextDateDay;
    private javax.swing.JComboBox nextDateMonth;
    private javax.swing.JComboBox nextDateYear;
    private javax.swing.JLabel order;
    private javax.swing.JTextField orderField;
    private javax.swing.JComboBox periodicCombo;
    private javax.swing.JTable periodicTable;
    private javax.swing.JTextField recipienIbanField;
    // End of variables declaration//GEN-END:variables
}
