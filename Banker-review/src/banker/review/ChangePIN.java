/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banker.review;

import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.sql.ResultSet;
import java.util.Random;
import javax.swing.JOptionPane;
import org.apache.commons.codec.digest.DigestUtils;

import ConnectionPool.NewClass;
import ServerMessages.Messages;

/**
 *
 * @author victor
 */
public class ChangePIN extends javax.swing.JFrame {

    private ResultSet rs;
    /**
     * Creates new form ChangePIN
     */
    public ChangePIN() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newPin = new javax.swing.JTextField();
        newPinGen = new javax.swing.JButton();
        userName = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setTitle("Смяна на ПИН");
        setLocation(new java.awt.Point(350, 200));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                enableMenu(evt);
            }
        });

        newPin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPinActionPerformed(evt);
            }
        });

        newPinGen.setText("Генерирай ПИН");
        newPinGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPinGenActionPerformed(evt);
            }
        });

        userName.setText("Потребителско име:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(userName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(newPin)
                    .addComponent(newPinGen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(179, 179, 179))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userName)
                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newPinGen)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newPinGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPinGenActionPerformed
        try{
            String username = userNameField.getText().trim();
            String sql = "SELECT * FROM customer_username WHERE username_id = '"+username+"'";
            // proverka dali ima takuv username
            rs=NewClass.Vrazka.st.executeQuery(sql);
            
        int count = 0;
            while(rs.next()){
                count = count + 1;
            }
        if(count == 1){
            Random rn = new Random();

            // generirane na pin 
            int randomPIN = (int) (Math.random() * 9000) + 1000;
            newPin.setText("" + randomPIN);
            String cryptPIN = DigestUtils.sha512Hex(newPin.getText());

            String newPin = "UPDATE customer_username SET pin='" + cryptPIN + "' WHERE username_id = '" + username + "' ";
            // vuvejdane na noviq pin v bazata danni
            NewClass.Vrazka.st.executeUpdate(newPin);
            
            // suboshtenie do server-a za izvrushenoto deistvie 
            try {
                PrintWriter out = new PrintWriter(new OutputStreamWriter(Messages.Svurzvane.connection.getOutputStream()));
                out.println("employee: "+LogIn.getEmployeeID() +" has changed PIN number of: "+username+".");
                out.flush();
            } catch (Exception ex) {
            }

            String history = "INSERT INTO employee_history (employee_username_id, action_description, "
                    + "action_time) VALUES ('" + LogIn.getEmployeeID() + "', "
                    + "'has changed PIN number of: " + username + ". ', SYSDATETIME()) ";
            // vuvejdane na danni za izvurshenoot deistvie ot bankera v bazata danni 
            NewClass.Vrazka.st.execute(history);
        } else {
            JOptionPane.showMessageDialog(null,"Customer not found !!!");
        }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        } 
    }//GEN-LAST:event_newPinGenActionPerformed

    private void newPinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPinActionPerformed
        
    }//GEN-LAST:event_newPinActionPerformed

    private void enableMenu(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_enableMenu
        // aktivirane na butoni i menuta v glavniq panel sled zatvarqneto na tozi 
        Review_profile.jMenuBar1.setEnabled(true);
        Review_profile.closeAcc.setEnabled(true);
        Review_profile.Block.setEnabled(true);
        Review_profile.jButton2.setEnabled(true);
        Review_profile.jMenu2.setEnabled(true);
        Review_profile.jMenu1.setEnabled(true);
    }//GEN-LAST:event_enableMenu


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField newPin;
    private javax.swing.JButton newPinGen;
    private javax.swing.JLabel userName;
    private javax.swing.JTextField userNameField;
    // End of variables declaration//GEN-END:variables
}
